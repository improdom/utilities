using System;
using System.Collections.Generic;
using Microsoft.AnalysisServices.AdomdClient;

public class DaxQueryExecutor
{
    public Dictionary<string, int> ExecuteDaxQuery()
    {
        string connectionString = "Data Source=<your-powerbi-datasource>;Initial Catalog=<your-catalog>"; // Update the Data Source and Catalog
        string daxQuery = @"
        DEFINE
            VAR DSCore = 
                SUMMARIZECOLUMNS(
                    'In Memory'[power_bi_partition],
                    'In Memory'[CoB Date ID],
                    ""Sumrecord_count"", CALCULATE(SUM('In Memory'[row_cnt]))
                )
            VAR DSCoreFiltered = 
                FILTER(DSCore, 'In Memory'[CoB Date ID] = 20240916)
            VAR DSOPimaryWindowed = 
                TOPN(50, DSCoreFiltered, [Sumrecord_count], 0, 'In Memory'[power_bi_partition], 1)
        EVALUATE
            DSOPimaryWindowed
        ORDER BY
            [Sumrecord_count] DESC, 'In Memory'[power_bi_partition]
        ";

        var result = new Dictionary<string, int>();

        using (AdomdConnection connection = new AdomdConnection(connectionString))
        {
            connection.Open();

            using (AdomdCommand command = new AdomdCommand(daxQuery, connection))
            {
                using (AdomdDataReader reader = command.ExecuteReader())
                {
                    while (reader.Read())
                    {
                        string powerBiPartition = reader["power_bi_partition"].ToString();
                        int sumRecordCount = Convert.ToInt32(reader["Sumrecord_count"]);
                        result.Add(powerBiPartition, sumRecordCount);
                    }
                }
            }
        }

        return result;
    }
}
