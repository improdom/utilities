import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.Map;

@Component
public class WorkflowFactory {

    private final WorkflowConfig workflowConfig;

    @Autowired
    public WorkflowFactory(WorkflowConfig workflowConfig) {
        this.workflowConfig = workflowConfig;
    }

    public BaseWorkflow createWorkflow(String workflowName) {
        WorkflowConfig.Workflow workflowConfigData = workflowConfig.getWorkflows().get(workflowName);

        if (workflowConfigData == null) {
            throw new IllegalArgumentException("No workflow configuration found for: " + workflowName);
        }

        switch (workflowName) {
            case "databricks-etl":
                return new DatabricksEtlWorkflow(workflowConfigData.getArcEvent(), workflowConfigData.getRunWorkflow());
            case "pbi-refresh-complete":
                return new PbiRefreshCompleteWorkflow(workflowConfigData.getArcEvent(), workflowConfigData.getRunWorkflow());
            default:
                throw new UnsupportedOperationException("Unknown workflow: " + workflowName);
        }
    }
}
