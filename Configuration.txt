using Microsoft.Identity.Client;
using Microsoft.PowerBI.Api;
using Microsoft.PowerBI.Api.Models;
using System;
using System.Net.Http.Headers;
using System.Threading.Tasks;

class Program
{
    private static readonly string clientId = "Your_Client_ID";
    private static readonly string tenantId = "Your_Tenant_ID";
    private static readonly string clientSecret = "Your_Client_Secret";
    private static readonly string authorityUrl = $"https://login.microsoftonline.com/{tenantId}";
    private static readonly string powerBiApiUrl = "https://api.powerbi.com/";
    private static readonly string workspaceId = "Your_Workspace_ID";
    private static readonly string datasetId = "Your_Dataset_ID";

    static async Task Main(string[] args)
    {
        var accessToken = await GetAccessToken();
        using var powerBiClient = new PowerBIClient(new Uri(powerBiApiUrl), new TokenCredentials(accessToken, "Bearer"));

        // Get the dataset's refresh history
        var refreshes = await powerBiClient.Datasets.GetRefreshHistoryInGroupAsync(workspaceId, datasetId);
        
        foreach (var refresh in refreshes.Value)
        {
            Console.WriteLine($"Refresh ID: {refresh.Id}, Status: {refresh.Status}, Start Time: {refresh.StartTime}, End Time: {refresh.EndTime}");
        }
    }

    private static async Task<string> GetAccessToken()
    {
        var app = ConfidentialClientApplicationBuilder.Create(clientId)
            .WithClientSecret(clientSecret)
            .WithAuthority(new Uri(authorityUrl))
            .Build();

        var scopes = new[] { "https://analysis.windows.net/powerbi/api/.default" };

        var result = await app.AcquireTokenForClient(scopes).ExecuteAsync();
        return result.AccessToken;
    }
}
