using System;
using System.Collections.Generic;
using System.IO;

class Program
{
    static void Main(string[] args)
    {
        string filePath = "path_to_your_file.csv"; // Replace with your file path
        int numberOfColumnsToRead = 4; // Specify how many columns to process
        List<Dictionary<string, string>> data = ReadPSVFile(filePath, numberOfColumnsToRead);

        // Print the data to verify
        foreach (var row in data)
        {
            foreach (var kvp in row)
            {
                Console.Write($"{kvp.Key}: {kvp.Value} | ");
            }
            Console.WriteLine();
        }
    }

    static List<Dictionary<string, string>> ReadPSVFile(string filePath, int numberOfColumns)
    {
        var result = new List<Dictionary<string, string>>();

        using (var reader = new StreamReader(filePath))
        {
            // Read the first line to get the column names
            string headerLine = reader.ReadLine();
            if (headerLine == null)
                throw new Exception("The file is empty.");

            string[] columnNames = headerLine.Split('|');

            // Limit the column names to the specified number
            columnNames = columnNames.Length > numberOfColumns
                ? columnNames[..numberOfColumns]
                : columnNames;

            // Read the remaining lines
            string line;
            while ((line = reader.ReadLine()) != null)
            {
                string[] values = line.Split('|');
                var row = new Dictionary<string, string>();

                for (int i = 0; i < numberOfColumns; i++)
                {
                    string columnName = i < columnNames.Length ? columnNames[i] : $"Column{i + 1}";
                    string value = i < values.Length ? values[i] : string.Empty;
                    row[columnName] = value;
                }

                result.Add(row);
            }
        }

        return result;
    }
}
