public async Task RunWithThrottleAsync<T>(
    IEnumerable<T> items,
    int maxDegreeOfParallelism,
    Func<T, Task> taskFactory)
{
    var tasks = new List<Task>();

    using var enumerator = items.GetEnumerator();

    // Start initial batch
    while (tasks.Count < maxDegreeOfParallelism && enumerator.MoveNext())
    {
        tasks.Add(taskFactory(enumerator.Current));
    }

    while (tasks.Count > 0)
    {
        var completed = await Task.WhenAny(tasks);
        tasks.Remove(completed);

        if (enumerator.MoveNext())
        {
            tasks.Add(taskFactory(enumerator.Current));
        }
    }
}
