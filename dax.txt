using System;
using System.Text.Json.Serialization;

public class NodeEventPayload
{
    [JsonPropertyName("hierarchyLevel")]
    public string HierarchyLevel { get; set; }

    [JsonPropertyName("nodeEventName")]
    public string NodeEventName { get; set; }

    [JsonPropertyName("businessHierarchyNodeId")]
    public string BusinessHierarchyNodeId { get; set; }

    [JsonPropertyName("businessHierarchyNodeName")]
    public string BusinessHierarchyNodeName { get; set; }

    [JsonPropertyName("nodeTriggerStatus")]
    public string NodeTriggerStatus { get; set; }

    [JsonPropertyName("businessDate")]
    public string BusinessDate { get; set; } // Consider DateTime if format is always ISO

    [JsonPropertyName("eventName")]
    public string EventName { get; set; }

    [JsonPropertyName("sourceEventTs")]
    public string SourceEventTs { get; set; } // Or DateTime

    [JsonPropertyName("sourceSystemId")]
    public string SourceSystemId { get; set; }

    [JsonPropertyName("sourceSystemName")]
    public string SourceSystemName { get; set; }

    [JsonPropertyName("region")]
    public string Region { get; set; }

    [JsonPropertyName("calcCategory")]
    public string CalcCategory { get; set; }

    [JsonPropertyName("resultType")]
    public string ResultType { get; set; }

    [JsonPropertyName("triggerStatus")]
    public string TriggerStatus { get; set; }
}
